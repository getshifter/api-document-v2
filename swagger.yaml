swagger: '2.0'
info:
  title: Shifter API Version 2
  description: Shifter API Version 2 provides you the way of API based operation  for your project and Your Wordpress.
  version: "2.0"
host: api.getshifter.io
schemes:
  - https
basePath: /v2
produces:
  - application/json
paths:
  /projects:
    get:
      description: List the infomation of your projects
      tags:
        - projects
      responses:
        200:
          description: Get your projects infomation
          schema:
            type: array
            items:
              "$ref": "#/definitions/ProjectsResponse"
    post:
      description: Create a new project. (The organizations parameter is optional.)
      tags:
        - projects
      parameters:
        - name: request
          in: body
          required: true
          schema:
            type: object
            required:
              - project_name
            properties:
              project_name:
                type: string
              organizations:
                type: array
                items:
                  type: string
      responses:
        201:
          description: Create successfully
          schema:
            properties:
              project_id:
                type: string
              project_name:
                type: string
              shifter_cdn_url:
                type: string
              wordpress_site_url:
                type: string
        400:
          description: It exceeds the maximum number of your projects
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /projects/{project_id}:
    delete:
      description: Delete your project
      tags:
        - projects
      parameters:
        - name: project_id
          in: path
          required: true
          description: project ID
          type: string
      responses:
        204:
          description: Success
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    get:
      description: Get your project infomation
      tags:
        - projects
      parameters:
        - name: project_id
          in: path
          required: true
          description: project ID
          type: string
      responses:
        200:
          description: Project status response
          schema:
            properties:
              project_name:
                type: string
              stock_state:
                type: string
              project_id:
                type: string
              wordpress_site_url:
                type: string
              domain:
                type: string
              php_version:
                type: string
              access_url:
                type: string
              update_time:
                type: string
              last_launched:
                type: string
              disk_usage:
                type: string
              deploy_type:
                type: string
              raw_url:
                type: string
              create_time:
                type: string
              automation:
                type: boolean
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /projects/{project_id}/project_name:
    put:
      description: Update your project name
      tags:
        - projects
      parameters:
        - name: project_id
          in: path
          required: true
          description: project ID
          type: string
        - name: request
          in: body
          required: true
          schema:
            properties:
              project_name:
                type: string
                description: project name
      responses:
        204:
          description: Update successfully
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /projects/{project_id}/deployment:
    put:
      description: Update deploy setting of specfied project
      tags:
        - projects
      parameters:
        - name: project_id
          in: path
          required: true
          description: project ID
          type: string
        - name: request
          in: body
          required: true
          schema:
            properties:
              automation:
                type: boolean
                description: if set to true, deploy automatically after generating Artifact
      responses:
        204:
          description: Update successfully
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /projects/{project_id}/wordpress_site/start:
    post:
      description: Start WordPress
      tags:
        - projects
      parameters:
        - name: project_id
          in: path
          required: true
          description: project ID
          type: string
        - name: request
          in: body
          schema:
            properties:
              emergency:
                type: boolean
                description: start WordPress as emergency user default is false
      responses:
        201:
          description: WordPress started successfully.
          schema:
            type: object
            properties:
              notification_id:
                type: string
              emergency_password:
                type: string
                description: the password of emergency user. This password is only returned when emergency request
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /projects/{project_id}/wordpress_site/stop:
    post:
      description: Stop WordPress
      tags:
        - projects
      parameters:
        - name: project_id
          in: path
          required: true
          description: project ID
          type: string
      responses:
        201:
          description: WordPress started successfully.
          schema:
            type: object
            properties:
              notification_id:
                type: string
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        409:
          description: Invalid request
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"

  /projects/{project_id}/wordpress_site/check_wp_setup/{notification_id}:
    get:
      description: Start WordPress
      tags:
        - projects
      parameters:
        - name: project_id
          in: path
          required: true
          description: project ID
          type: string
        - name: notification_id
          in: path
          required: true
          description: notification ID
          type: string
      responses:
        200:
          description: WordPress Site importing status
          schema:
            type: string
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: missing your project(errorCode:missing_project) or notificationId(errorCode:missing_notification_id)
          schema:
            properties:
              message:
                type: string
              errorCode:
                type: string
  /sites:
    get:
      description: List the infomation of your sites
      tags:
        - sites
      responses:
        200:
          description: Get your sites infomation
          schema:
            type: array
            items:
              "$ref": "#/definitions/ProjectsResponse"
    post:
      description: Create a new project. (The organizations parameter is optional.)
      tags:
        - sites
      parameters:
        - name: request
          in: body
          required: true
          schema:
            type: object
            required:
              - site_name
            properties:
              site_name:
                type: string
              organizations:
                type: array
                items:
                  type: string
      responses:
        201:
          description: Create successfully
          schema:
            properties:
              project_id:
                type: string
              site_name:
                type: string
              shifter_cdn_url:
                type: string
              wordpress_site_url:
                type: string
        400:
          description: It exceeds the maximum number of your sites
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /sites/{site_id}:
    delete:
      description: Delete your project
      tags:
        - sites
      parameters:
        - name: site_id
          in: path
          required: true
          description: project ID
          type: string
      responses:
        204:
          description: Success
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    get:
      description: Get your project infomation
      tags:
        - sites
      parameters:
        - name: site_id
          in: path
          required: true
          description: project ID
          type: string
      responses:
        200:
          description: Project status response
          schema:
            properties:
              project_name:
                type: string
              stock_state:
                type: string
              site_id:
                type: string
              wordpress_site_url:
                type: string
              domain:
                type: string
              php_version:
                type: string
              access_url:
                type: string
              update_time:
                type: string
              last_launched:
                type: string
              disk_usage:
                type: string
              deploy_type:
                type: string
              raw_url:
                type: string
              create_time:
                type: string
              automation:
                type: boolean
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /sites/{site_id}/site_name:
    put:
      description: Update your project name
      tags:
        - sites
      parameters:
        - name: site_id
          in: path
          required: true
          description: project ID
          type: string
        - name: request
          in: body
          required: true
          schema:
            properties:
              site_name:
                type: string
                description: project name
      responses:
        204:
          description: Update successfully
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /sites/{site_id}/deployment:
    put:
      description: Update deploy setting of specfied project
      tags:
        - sites
      parameters:
        - name: site_id
          in: path
          required: true
          description: project ID
          type: string
        - name: request
          in: body
          required: true
          schema:
            properties:
              automation:
                type: boolean
                description: if set to true, deploy automatically after generating Artifact
      responses:
        204:
          description: Update successfully
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /sites/{site_id}/wordpress_site/start:
    post:
      description: Start WordPress
      tags:
        - sites
      parameters:
        - name: site_id
          in: path
          required: true
          description: project ID
          type: string
        - name: request
          in: body
          schema:
            properties:
              emergency:
                type: boolean
                description: start WordPress as emergency user default is false
      responses:
        201:
          description: WordPress started successfully.
          schema:
            type: object
            properties:
              notification_id:
                type: string
              emergency_password:
                type: string
                description: the password of emergency user. This password is only returned when emergency request
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /sites/{site_id}/wordpress_site/stop:
    post:
      description: Stop WordPress
      tags:
        - sites
      parameters:
        - name: site_id
          in: path
          required: true
          description: project ID
          type: string
      responses:
        201:
          description: WordPress started successfully.
          schema:
            type: object
            properties:
              notification_id:
                type: string
        404:
          description: Not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        409:
          description: Invalid request
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"

  /sites/{site_id}/wordpress_site/check_wp_setup/{notification_id}:
    get:
      description: Start WordPress
      tags:
        - sites
      parameters:
        - name: site_id
          in: path
          required: true
          description: project ID
          type: string
        - name: notification_id
          in: path
          required: true
          description: notification ID
          type: string
      responses:
        200:
          description: WordPress Site importing status
          schema:
            type: string
        400:
          description: Invaild parameters
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: missing your project(errorCode:missing_project) or notificationId(errorCode:missing_notification_id)
          schema:
            properties:
              message:
                type: string
              errorCode:
                type: string
  /billing:
    post:
      description: update payment method
      tags:
        - billing
      parameters:
        - name: request
          in: body
          required: true
          schema:
            properties:
              card_exp_month:
                type: string
              card_exp_year:
                type: string
              card_last4:
                type: string
              card_id:
                type: string
              card_token:
                type: string
              card_brand:
                type: string
      responses:
        201:
          description: success updating payment method
        400:
          description: Card does not support
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /organizations:
    get:
      description: list organizations
      deprecated: true
      tags:
        - organizations
      responses:
        200:
          description: list of organizations
          schema:
            type: object
            properties:
              owner:
                type: array
                items:
                  "$ref": "#/definitions/OrganizationsResponseWithId"
              member:
                type: array
                items:
                  "$ref": "#/definitions/OrganizationsResponseWithId"
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: create a organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: request
          in: body
          required: true
          schema:
            "$ref": "#/definitions/OrganizationsRequest"
      responses:
        201:
          description: creating organization is successfully.
          schema:
            type: object
            properties:
              org_id:
                type: string
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /organizations/{org_id}:
    get:
      description: Get a details of organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
      responses:
        200:
          description: a details of organization
          schema:
            "$ref": "#/definitions/OrganizationsResponseWithId"
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: Update a organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
        - name: request
          in: body
          description: new organization information
          required: true
          schema:
            "$ref": "#/definitions/OrganizationsRequest"
      responses:
        204:
          description: updating is successfully.
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: delete a organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
      responses:
        204:
          description: deleting a organization is successfully
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /organizations/{org_id}/projects:
    get:
      description: list projects in specified organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
      responses:
        200:
          description: listing projects is successfully
          schema:
            type: array
            items:
              "$ref": "#/definitions/ProjectsResponse"
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: add projects to the organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
        - name: request
          in: body
          required: true
          schema:
            type: object
            properties:
              projects:
                type: array
                items:
                  type: string
      responses:
        201:
          description: added project successfully to the organization.
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: detach projects from specfied organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
        - name: request
          in: body
          description: project IDs
          schema:
            type: object
            properties:
              projects:
                type: array
                items:
                  type: string
      responses:
        204:
          description: detaching project successfully
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /organizations/{org_id}/projects/{project_id}:
    get:
      description: get project details which specified organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
        - name: project_id
          in: path
          description: project id
          required: true
          type: string
      responses:
        200:
          description: project details specfied organization id and project id
          schema:
            "$ref": "#/definitions/ProjectsResponse"
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /organizations/{org_id}/members:
    get:
      description: list users specfied organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
      responses:
        200:
          description: listing users is successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: add users to the specfied organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
        - name: request
          in: body
          description: users who added to the organization
          schema:
            type: object
            properties:
              members:
                type: array
                items:
                  type: object
                  required:
                    - username
                    - email
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    role:
                      type: string
      responses:
        201:
          description: the users successfully added.
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: delete user from specfied organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
        - name: request
          in: body
          description: list of username who deleted from specfied organization
          required: true
          schema:
            type: object
            properties:
              members:
                type: array
                items:
                  type: string
      responses:
        204:
          description: deleting users successfully.
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /organizations/{org_id}/activation/{key}:
    post:
      description: activate user who is invited the organization
      deprecated: true
      tags:
        - organizations
      parameters:
        - name: org_id
          in: path
          description: organization id
          required: true
          type: string
        - name: key
          in: path
          description: activation key which is sent when owner invites other user to the organization
          required: true
          type: string
      responses:
        201:
          description: successfully activated user
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /teams:
    get:
      description: list teams
      tags:
        - teams
      responses:
        200:
          description: list of teams
          schema:
            type: object
            properties:
              owner:
                type: array
                items:
                  "$ref": "#/definitions/OrganizationsResponseWithId"
              member:
                type: array
                items:
                  "$ref": "#/definitions/OrganizationsResponseWithId"
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: create a team
      tags:
        - teams
      parameters:
        - name: request
          in: body
          required: true
          schema:
            "$ref": "#/definitions/OrganizationsRequest"
      responses:
        201:
          description: creating team is successfully.
          schema:
            type: object
            properties:
              team_id:
                type: string
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /teams/{team_id}:
    get:
      description: Get a details of team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
      responses:
        200:
          description: a details of team
          schema:
            "$ref": "#/definitions/OrganizationsResponseWithId"
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: Update a team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
        - name: request
          in: body
          description: new team information
          required: true
          schema:
            "$ref": "#/definitions/OrganizationsRequest"
      responses:
        204:
          description: updating is successfully.
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: delete a team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
      responses:
        204:
          description: deleting a team is successfully
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /teams/{team_id}/projects:
    get:
      description: list projects in specified team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
      responses:
        200:
          description: listing projects is successfully
          schema:
            type: array
            items:
              "$ref": "#/definitions/ProjectsResponse"
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: add projects to the team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
        - name: request
          in: body
          required: true
          schema:
            type: object
            properties:
              projects:
                type: array
                items:
                  type: string
      responses:
        201:
          description: added project successfully to the team.
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: detach projects from specfied team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
        - name: request
          in: body
          description: project IDs
          schema:
            type: object
            properties:
              projects:
                type: array
                items:
                  type: string
      responses:
        204:
          description: detaching project successfully
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /teams/{team_id}/projects/{project_id}:
    get:
      description: get project details which specified team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
        - name: project_id
          in: path
          description: project id
          required: true
          type: string
      responses:
        200:
          description: project details specfied team id and project id
          schema:
            "$ref": "#/definitions/ProjectsResponse"
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /teams/{team_id}/members:
    get:
      description: list users specfied team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
      responses:
        200:
          description: listing users is successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: add users to the specfied team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
        - name: request
          in: body
          description: users who added to the team
          schema:
            type: object
            properties:
              members:
                type: array
                items:
                  type: object
                  required:
                    - username
                    - email
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    role:
                      type: string
      responses:
        201:
          description: the users successfully added.
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: delete user from specfied team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
        - name: request
          in: body
          description: list of username who deleted from specfied team
          required: true
          schema:
            type: object
            properties:
              members:
                type: array
                items:
                  type: string
      responses:
        204:
          description: deleting users successfully.
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /teams/{team_id}/activation/{key}:
    post:
      description: activate user who is invited the team
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          description: team id
          required: true
          type: string
        - name: key
          in: path
          description: activation key which is sent when owner invites other user to the team
          required: true
          type: string
      responses:
        201:
          description: successfully activated user
        403:
          description: Forbidden.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
        404:
          description: Not found.
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /coupon:
    get:
      description: list coupons
      tags:
        - coupons
      responses:
        200:
          description: listing coupon code successfuly.
          schema:
            type: array
            items:
              type: string
  /webhooks/{site_id}:
    get:
      description: get web hooks
      tags:
        - webhooks
      parameters:
        - name: site_id
          in: path
          description: site id
          required: true
          type: string
      responses:
        200:
          description: list webhooks under the site id
          schema:
            type: array
            items:
              type: object
              properties:
                site_id:
                  type: string
                hook_event:
                 type: string
                webhook_url:
                  type: string
                method:
                  type: string
                enabled:
                  type: boolean
                headers:
                  type: object
        404:
          description: not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse" 
    post:
      description: create web hooks
      tags:
        - webhooks
      parameters:
        - name: site_id
          in: path
          description: site id
          required: true
          type: string
        - name: request
          in: body
          description: web hook item
          required: true
          type: object
          properties:
            hook_event:
              type: string
            url:
              type: string
            method:
              type: string
            enabled:
              type: string
            headers:
              type: object
      responses:
        201:
          description: succeeded. (created web hook item will be returned)
          schema:
            type: array
            items:
              type: object
              properties:
                site_id:
                  type: string
                hook_event:
                 type: string
                webhook_url:
                  type: string
                method:
                  type: string
                enabled:
                  type: boolean
                headers:
                  type: object
        400:
          description: invalid parameter.  
          schema:
            "$ref": "#/definitions/CommonErrorResponse"           
        403:
          description: user is not site owner.  
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    put:
      description: update web hooks
      tags:
        - webhooks
      parameters:
        - name: site_id
          in: path
          description: site id
          required: true
          type: string
        - name: request
          in: body
          description: web hook item
          required: true
          type: object
          properties:
            hook_event:
              type: string
            url:
              type: string
            method:
              type: string
            enabled:
              type: string
            headers:
              type: object
      responses:
        204:
          description: succeeded. (updated web hook item will be returned)
          schema:
            type: array
            items:
              type: object
              properties:
                site_id:
                  type: string
                hook_event:
                 type: string
                webhook_url:
                  type: string
                method:
                  type: string
                enabled:
                  type: boolean
                headers:
                  type: object
        400:
          description: invalid parameter.  
          schema:
            "$ref": "#/definitions/CommonErrorResponse"           
        403:
          description: user is not site owner.  
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: delete web hooks
      tags:
        - webhooks
      parameters:
        - name: site_id
          in: path
          description: site id
          required: true
          type: string
        - name: request
          in: body
          description: web hook item
          required: true
          type: object
          properties:
            hook_event:
              type: string
      responses:
        204:
          description: succeeded. (deleted web hook item will be returened)
          schema:
            type: array
            items:
              type: object
              properties:
                site_id:
                  type: string
                hook_event:
                 type: string
                webhook_url:
                  type: string
                method:
                  type: string
                enabled:
                  type: boolean
                headers:
                  type: object
        400:
          description: invalid parameter.  
          schema:
            "$ref": "#/definitions/CommonErrorResponse"           
        403:
          description: user is not site owner.  
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /webhooks/{site_id}/history:
    get:
      description: list web hook history
      tags:
        - webhooks
      parameters:
        - name: site_id
          in: path
          description: site id
          required: true
          type: string
      responses:
        200:
          description: list webhooks under the site id
          schema:
            type: array
            items:
              type: object
              properties:
                site_id:
                  type: string
                hook_event:
                 type: string
                webhook_url:
                  type: string
                result:
                  type: string
                jon_id:
                  type: string
                called_date:
                  type: string
                text:
                  type: string
        404:
          description: not found
          schema:
            "$ref": "#/definitions/CommonErrorResponse" 
  /roles:
    get:
      description: list roles (work in progress)
      tags:
        - roles
      responses:
        200:
          description: list of roles and description
          schema:
            type: array
            items:
              type: string
  /role/{role_name}:
    get:
      description: get a role (work in progress)
      tags:
        - roles
      parameters:
        - name: role_name
          in: path
          description: name of role
          required: true
          type: string
      responses:
        200:
          description: list of accessible API
          schema:
            type: array
            items:
              type: string
        404:
          description: role_name does not find
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    post:
      description: create or update role (work in progress)
      tags:
        - roles
      parameters:
        - name: role_name
          in: path
          description: name of role
          required: true
          type: string
        - name: request
          in: body
          description: list of features which is accessible
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        201:
          description: creating role successfully
        404:
          description: role_name does not find
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: delete role (work in progress)
      tags:
        - roles
      parameters:
        - name: role_name
          in: path
          description: name of role
          required: true
          type: string
      responses:
        204:
          description: deleting role successfully
        404:
          description: role_name does not find
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
  /role/{role_name}/users:
    get:
      description: list users who the role attached (work in progress)
      tags:
        - roles
      parameters:
        - name: role_name
          in: path
          description: name of role
          required: true
          type: string
      responses:
        200:
          description: list roles
          schema:
            type: array
            items:
              type: string
    post:
      description: add or update users in the role (work in progress)
      tags:
        - roles
      parameters:
        - name: role_name
          in: path
          description: name of role
          required: true
          type: string
        - name: request
          in: body
          description: list of user name who belong to the role
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        201:
          description: adding or update users to the role successfully
        404:
          description: one of users does not exist
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
    delete:
      description: delete users from the role (work in progress)
      tags:
        - roles
      parameters:
        - name: role_name
          in: path
          description: name of role
          required: true
          type: string
        - name: request
          in: body
          description: list of user name who belong to the role
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        204:
          description: deleting users from the role successfully
        404:
          description: one of users does not exist
          schema:
            "$ref": "#/definitions/CommonErrorResponse"
definitions:
  LoginPostRequest:
    properties:
      username:
        type: string
      password:
        type: string
  LoginPostResponse:
    properties:
      AccessToken:
        type: string
  LoginErrorResponse:
    properties:
      message:
        type: string
        description: Invalid Username or Password
  PlanResponse:
    properties:
      id:
        type: string
      object:
        type: string
      amount:
        type: integer
      created:
        type: string
      currency:
        type: string
      interval:
        type: string
      interval_count:
        type: integer
      livemode:
        type: boolean
      name:
        type: string
      trial_period_days:
        type: integer
      metadata:
        type: object
        properties:
          projects_limit:
            type: string
          domain_setting:
            type: string
          netlify_deploy:
            type: string
          user_limit:
            type: string
          import_archives:
            type: string
          export_archives:
            type: string
          backup:
            type: string
          max_transfer_gb:
            type: string
          max_disk_gb:
            type: string
          enable_subuser:
            type: string
  PlanWithAnResponse:
    properties:
      id:
        type: string
      object:
        type: string
      amount:
        type: integer
      created:
        type: string
      currency:
        type: string
      interval:
        type: string
      interval_count:
        type: integer
      livemode:
        type: boolean
      name:
        type: string
      trial_period_days:
        type: integer
      annualprice:
        type: integer
      metadata:
        type: object
        properties:
          projects_limit:
            type: string
          domain_setting:
            type: string
          netlify_deploy:
            type: string
          user_limit:
            type: string
          import_archives:
            type: string
          export_archives:
            type: string
          backup:
            type: string
          max_transfer_gb:
            type: string
          max_disk_gb:
            type: string
          enable_subuser:
            type: string
  OrganizationsResponseWithId:
    properties:
      org_id:
        type: string
      org_name:
        type: string
      org_website:
        type: string
      phone_number:
        type: string
      org_country:
        type: string
      org_state:
        type: string
      org_twitter:
        type: string
      org_size:
        type: string
  OrganizationsResponseWithoutId:
    properties:
      org_name:
        type: string
      org_website:
        type: string
      phone_number:
        type: string
      org_country:
        type: string
      org_state:
        type: string
      org_twitter:
        type: string
      org_size:
        type: string
  OrganizationsRequest:
    "$ref": "#/definitions/OrganizationsResponseWithoutId"
  ProjectsResponse:
    properties:
      project_id:
        type: string
      project_name:
        type: string
      project_owner:
        type: string
      update_time:
        type: string
      wordpress_site_url:
        type: string
      access_url:
        type: string
      domain:
        type: string
      deploy_type:
        type: string
      raw_url:
        type: string
      create_time:
        type: string
      automation:
        type: boolean
  CommonErrorResponse:
    properties:
      message:
        type: string
